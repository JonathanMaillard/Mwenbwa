{"version":3,"sources":["../../src/server/index.js"],"names":["APP_PORT","process","env","app","use","express","static","path","resolve","__dirname","bcrypt","require","saltRounds","hash","pwd","genSalt","err","salt","myPlaintextPassword","dbCalls","post","req","res","console","log","statusCode","json","test","get","send","dbGetTrees","userId","param","user","userPassword","userEmail","userColor","listen"],"mappings":"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","sourcesContent":["/* becodeorg/mwenbwa\n *\n * /src/server/index.js - Server entry point\n *\n * coded by leny@BeCode\n * started at 18/05/2020\n */\n\n\n\n// EXPRESS DECLARATION\nimport express from \"express\";\nimport path from \"path\";\nconst {APP_PORT} = process.env;\nconst app = express();\napp.use(express.static(path.resolve(__dirname, \"../../bin/client\")));\n\n// BCRYPT DECLARATION\nconst bcrypt = require(\"bcrypt\");\nconst saltRounds = 10;\n\nconst hash = pwd => {\n    bcrypt.genSalt(saltRounds, (err, salt) => {\n        bcrypt.hash(myPlaintextPassword, salt, (err, hash) => {\n            // Store hash in your password DB.\n        });\n    });\n};\n\n// DATABASE CONNEXION\n//import {MongoClient, uri} from \"./db-connexion\";\n//const client = new MongoClient(uri, {useNewUrlParser: true});\n// client.connect(err => {\n//     console.log(err);\n//     const collection = client.db(\"mwenbwa\");\n//     client.close();\n// });\n\n //Importer fichier dbCalls\n const dbCalls = require('./dbCalls');\n\n// app.get(\"/hello\", (req, res) => {\n//     console.log(\"salut les potes\");\n//     console.log(`ℹ️  (${req.method.toUpperCase()}) ${req.url}`);\n//     res.send(\"Hello, World!\");\n// });\napp.post(\"/test\", (req, res) => {\n    console.log(req);\n    res.statusCode = 512;\n    res.json({test: 1});\n});\n\n// GET REQUESTS\napp.get(\"/trees\", async (req, res) => {\n    //console.log(req);\n    //dbCalls.dbGetTrees();\n    //console.log( await dbCalls.dbGetTrees() );\n    res.send( await dbCalls.dbGetTrees() );\n});\napp.get(\"/user\", (req, res) => {\n    const userId = req.param(\"id\");\n    // res.send( dbGetUser(userId) );\n});\napp.get(\"/leaderboard\", (req, res) => {\n    // res.send( dbGetLeaderboard() );\n});\napp.get(\"/logs\", (req, res) => {\n    const userId = req.param(\"id\");\n    // res.send( dbGetLogs() );\n});\n\n// CONNEXION\napp.post(\"/login\", (req, res) => {\n    const user = req.param(\"user\");\n    const pwd = req.param(\"pwd\");\n    // res.send( dbLogin(user, pwd) );\n});\napp.post(\"/register\", (req, res) => {\n    const userId = req.param(\"user\");\n    const userPassword = req.param(\"password\");\n    const userEmail = req.param(\"email\");\n    const userColor = req.param(\"color\");\n    // res.send( dbGetLogs() );\n});\n\n// GAME ACTIONS COMMANDS\napp.post(\"/buyTree\", (req, res) => {\n    // res.send( );\n});\napp.post(\"/lockTree\", (req, res) => {\n    // res.send( );\n});\napp.post(\"/comment\", (req, res) => {\n    // res.send( );\n});\n\n// CHANGE SETTINGS COMMANDS\napp.post(\"/changeColor\", (req, res) => {\n    // res.send( );\n});\napp.post(\"/changeMailAdress\", (req, res) => {\n    // res.send( );\n});\napp.post(\"/changeUsername\", (req, res) => {\n    // res.send( );\n});\napp.post(\"/changePassword\", (req, res) => {\n    // res.send( );\n});\napp.post(\"/changeProfilePic\", (req, res) => {\n    // res.send( );\n});\n\n// START SERVER\napp.listen(APP_PORT, () =>\n    console.log(`🚀 Server is listening on port ${APP_PORT}.`),\n);\n\n\n\n\n/* //GET trees infos\napp.get(\"/get-trees\", (req, res) => {\n    console.log(`ℹ️  (${req.method.toUpperCase()}) ${req.url}`);\n    let resultArray = [];\n\n    client.connect(err => {\n        console.log(err);\n        \n        const collection = client.db(\"mwenbwa\");\n        // perform actions on the collection object\n        let cursor = collection.collection(\"trees\").find();\n        console.log(cursor);\n        cursor.forEach(function(doc, err){\n            console.error(\"error : \" + err);\n            console.log(\"doc : \" + doc);\n            resultArray.push(doc);\n\n        }, function(){\n            res.send(resultArray);\n            client.close();\n            \n        })\n        // const test = collection.collection(\"mwenbwa\").insertOne({test: \"test\"});\n        //client.close();\n    });\n    \n\n    //res.send(\"yo\");\n}); */\n\n"],"file":"index.js"}